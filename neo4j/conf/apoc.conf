# APOC configuration
apoc.export.file.enabled=true
apoc.import.file.enabled=true
apoc.uuid.enabled=true
apoc.uuid.addToExistingNodes=false

# Procedures initialisation
apoc.initializer.system.0=create user stellarium if not exists set password 'asvd' change not required

apoc.initializer.neo4j.1=create constraint player_uuid_unique if not exists on (p:Player) assert p.uuid is unique
apoc.initializer.neo4j.2=create constraint player_email_unique if not exists on (p:Player) assert p.email is unique
apoc.initializer.neo4j.3=create constraint player_username_unique if not exists on (p:Player) assert p.username is unique
apoc.initializer.neo4j.4=call apoc.uuid.install('Player')

apoc.initializer.neo4j.5=create constraint crew_name_unique if not exists on (c:Crew) assert c.name is unique

apoc.initializer.neo4j.6=create constraint federation_name_unique if not exists on (f:Federation) assert f.name is unique

apoc.initializer.neo4j.7=create constraint colony_id_unique if not exists on (c:Colony) assert p.uuid is unique
apoc.initializer.neo4j.8=create constraint colony_planet_id_unique if not exists on (c:Colony) assert c.planet_id is unique
apoc.initializer.neo4j.9=call apoc.uuid.install('Colony')
