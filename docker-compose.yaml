version: "3.9"
services:
  traefik:
    image: traefik:v2.4
    container_name: traefik
    command:
      - "--log.level=ERROR"
      - "--api.dashboard=true"
      #- "--accesslog=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=main-network"
      - "--entrypoints.web.address=:80"
      #- "--entrypoints.websecure.address=:443"
      - "--entrypoints.bolt.address=:7687"
      - "--entrypoints.neo4j.address=:7474"
      - "--entrypoints.mongo.address=:27017"
      - "--entrypoints.mongo-express.address=:8081"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.api.service=api@internal"
    restart: always
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - main-network
  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    container_name: web
    depends_on:
      - traefik
      - neo4j
      - mongodb
    ports: 
      - 8080:8080
    volumes:
      - ./web/:/home/node/app
      - web-node-modules:/home/node/app/node_modules
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stellarium-web.rule=Host(`localhost`) && (PathPrefix(`/api`) || PathPrefix(`/admin`))"
      - "traefik.http.routers.stellarium-web.entrypoints=web"
    environment:
      - PORT=3333
      - HOST=0.0.0.0
      - NODE_ENV=development
      - APP_NAME=stellarium
      - APP_URL=http://0.0.0.0:3333
      - CACHE_VIEWS=false
      - SESSION_DRIVER=cookie
    restart: unless-stopped
    networks: 
      - main-network
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend
    depends_on: 
      - traefik
    volumes: 
      - ./frontend:/home/node/app
      - frontend-node-modules:/home/node/app/node_modules
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stellarium-frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.stellarium-frontend.entrypoints=web"
    environment: 
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
    restart: unless-stopped
    networks: 
      - main-network
  neo4j:
    image: neo4j:4.2
    container_name: neo4j
    restart: unless-stopped
    depends_on: 
      - traefik
    ports:
      - 7474:7474
      - 7687:7687
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.neo4j.rule=Host(`localhost`)"
      - "traefik.http.routers.neo4j.entrypoints=neo4j"
      - "traefik.tcp.routers.neo4j.rule=HostSNI(`localhost`)"
      - "traefik.tcp.routers.neo4j.entrypoints=bolt"
    volumes:
      - neo4j-data:/data
      - ./neo4j/conf:/conf
      - ./neo4j/import:/import
      - ./neo4j/logs:/logs
      - ./neo4j/plugins:/plugins
    environment: 
      # Raise memory limits
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms.memory.heap.initial_size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
    networks: 
      - main-network
  mongodb:
    image: mongo:latest
    container_name: mongodb
    depends_on: 
      - traefik
    volumes: 
      - mongo-data:/data/db
      - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    environment: 
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_ROOT_DATABASE: stellarium
    labels: 
      - "traefik.enable=true"
      - "traefik.tcp.routers.mongo.rule=HostSNI(`localhost`)"
      - "traefik.tcp.routers.mongo.entrypoints=mongo"
    networks: 
      - main-network
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: unless-stopped
    depends_on: 
      - traefik
      - mongodb
    ports:
      - 8081:8081
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.mongo.rule=Host(`localhost`)"
      - "traefik.http.routers.mongo.entrypoints=mongo-express"
    environment: 
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpassword
      ME_CONFIG_MONGODB_SERVER: mongodb
    networks: 
      - main-network
networks: 
  main-network:
    driver: bridge
volumes:
  web-node-modules:
  frontend-node-modules:
  mongo-data:
  neo4j-data: