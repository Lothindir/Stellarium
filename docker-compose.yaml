version: "3.9"
services:
  traefik:
    image: traefik:v2.4
    container_name: traefik
    command:
      - "--log.level=ERROR"
      - "--api.dashboard=true"
      - "--accesslog=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=main-network"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.bolt.address=:7687"
      - "--entrypoints.neo4j.address=:7474"
      - "--entrypoints.neo4j-secure.address=:7473"
      - "--entrypoints.mongo.address=:27017"
      - "--entrypoints.mongo-express.address=:8081"
      - "--certificatesresolvers.stellarium-tls.acme.tlsChallenge=true"
      - "--certificatesresolvers.stellarium-tls.acme.email=lothindir@gmail.com"
      - "--certificatesresolvers.stellarium-tls.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.stellarium-tls.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory" #Remove to use prod server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.${BASE_HOSTNAME}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=stellarium-tls"
      - "traefik.http.middlewares.auth.basicauth.users=stellarium:$$2y$$10$$Iwj88jGAUSaQMec0lSRxo.oLlyYReu6n5PGek1dcEuluD.W.VVl06"
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - acme-cert:/letsencrypt
    networks:
      - main-network
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: web
    depends_on:
      - traefik
      - neo4j
      - mongodb
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.web-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.web-redirectregex.redirectregex.regex=^http://defi.${BASE_HOSTNAME}/(.*)"
      - "traefik.http.middlewares.web-redirectregex.redirectregex.replacement=http://api.${BASE_HOSTNAME}/trial/$${1}"
      - "traefik.http.middlewares.web-redirectregex.redirectregex.permanent=true"
      - "traefik.http.middlewares.web-redirecthttps.redirectscheme.scheme=https"
      - "traefik.http.middlewares.web-redirecthttps.redirectscheme.permanent=true"
      # HTTP
      - "traefik.http.routers.web.rule=(Host(`${BASE_HOSTNAME}`) && PathPrefix(`/api`)) || Host(`defi.${BASE_HOSTNAME}`)"
      - "traefik.http.routers.web.middlewares=web-redirecthttps"
      - "traefik.http.routers.stellarium-web.entrypoints=web"
      # HTTPS
      - "traefik.http.routers.web-secure.rule=(Host(`${BASE_HOSTNAME}`) && PathPrefix(`/api`)) || Host(`defi.${BASE_HOSTNAME}`)"
      - "traefik.http.routers.web-secure.middlewares=web-redirectregex,web-stripprefix"
      - "traefik.http.routers.web-secure.entrypoints=websecure"
      - "traefik.http.routers.web-secure.tls.certresolver=stellarium-tls"
    environment:
      - PORT=3333
      - HOST=0.0.0.0
      - NODE_ENV=production
      - APP_NAME=stellarium
      - APP_URL=http://0.0.0.0:3333
      - APP_KEY=${APP_KEY}
      - SESSION_DRIVER=cookie
      - NEO4J_HOST=neo4j
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - MONGO_DB=stellarium
      - MONGO_URI=mongodb://mongodb/
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - HASH_SECRET=${HASH_SECRET}
    restart: unless-stopped
    networks: 
      - main-network
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - 3000:3000
    depends_on: 
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.frontend-redirecthttps.redirectscheme.scheme=https"
      - "traefik.http.middlewares.stellarium-frontend-redirecthttps.redirectscheme.permanent=true"
      # HTTP
      - "traefik.http.routers.frontend.rule=Host(`${BASE_HOSTNAME}`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.middlewares=frontend-redirecthttps"
      # HTTPS
      - "traefik.http.routers.frontend-secure.rule=Host(`${BASE_HOSTNAME}`)"
      - "traefik.http.routers.frontend-secure.entrypoints=websecure"
      - "traefik.http.routers.frontend-secure.tls.certresolver=stellarium-tls"
    environment: 
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
      - NODE_ENV=production
    restart: unless-stopped
    networks: 
      - main-network
  neo4j:
    image: neo4j:4.2
    container_name: neo4j
    restart: unless-stopped
    depends_on: 
      - traefik
    ports:
      - 7474:7474
      - 7473:7473
      - 7687:7687
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.neo4j.rule=Host(`${BASE_HOSTNAME}`)"
      - "traefik.http.routers.neo4j.entrypoints=neo4j, neo4j-secure"
      - "traefik.tcp.routers.neo4j.rule=HostSNI(`${BASE_HOSTNAME}`)"
      - "traefik.tcp.routers.neo4j.entrypoints=bolt"
    volumes:
      - neo4j-data:/data
      - ./neo4j/conf:/conf
      - ./neo4j/import:/import
      - ./neo4j/logs:/logs
      - ./neo4j/plugins:/plugins
    environment: 
      # Raise memory limits
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms.memory.heap.initial_size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_dbms.connector.https.enabled=true
    networks: 
      - main-network
  mongodb:
    image: mongo:latest
    restart: unless-stopped
    container_name: mongodb
    depends_on: 
      - traefik
    volumes: 
      - mongo-data:/data/db
      - ./mongo/init:/docker-entrypoint-initdb.d/
    environment: 
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: stellarium
    labels: 
      - "traefik.enable=true"
      - "traefik.tcp.routers.mongo.rule=HostSNI(`${BASE_HOSTNAME}`)"
      - "traefik.tcp.routers.mongo.entrypoints=mongo"
    networks: 
      - main-network
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: unless-stopped
    depends_on: 
      - traefik
      - mongodb
    ports:
      - 8081:8081
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.mongo.rule=Host(`${BASE_HOSTNAME}`)"
      - "traefik.http.routers.mongo.entrypoints=mongo-express"
    environment: 
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
    networks: 
      - main-network
networks: 
  main-network:
    driver: bridge
volumes:
  acme-cert:
  mongo-data:
  neo4j-data: